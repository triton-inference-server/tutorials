{
  "$schema": "https://json-schema.org/draft-07/schema#",
  "copyright": [
    "# Copyright (c) 2022-2023, NVIDIA CORPORATION.  All rights reserved.",
    "# NVIDIA CORPORATION and its licensors retain all intellectual property",
    "# and proprietary rights in and to this software, related documentation",
    "# and any modifications thereto.  Any use, reproduction, disclosure or",
    "# distribution of this software and related documentation without an express",
    "# license agreement from NVIDIA CORPORATION is strictly prohibited."
  ],
  "properties": {
    "gpu": {
      "description": "Value must match the node's `.metadata.labels.nvidia.com/gpu.product` label.",
      "type": "string"
    },
    "model": {
      "description": "Configuration options related to the AI model to be deployed.",
      "properties": {
        "name": {
          "description": "Name of the model to be served Triton Server instances.",
          "pattern": "(gpt2|opt125m|llama-(2-(7b|70b)(-chat)?|3-(8b|70b)(-instruct)?))",
          "type": "string"
        },
        "persistentVolumeClaim": {
          "description": "Persistent volume claim where model content will be persisted.",
          "type": "string"
        },
        "pullSecret": {
          "description": "Name of the secret used to download the model from Hugging Face.",
          "oneOf": [
            { "type": "string" },
            { "type": "null" }
          ]
        },
        "skipConversion": {
          "description": "When `false` a model conversion job is created and the leader pod will wait for the job to complete before starting Triton; otherwise this doesn't happen.",
          "oneOf": [
            { "type": "boolean" },
            { "type": "null" }
          ]
        },
        "tensorrtLlm": {
          "description": "Configuration options related to the conversion of a non-optimized model into TensorRT format.",
          "oneOf": [
            {
              "properties": {
                "conversion": {
                  "description": "Configuration opens related to conversion of non-TensorRT models to TensorRT engine and plan files.",
                  "oneOf": [
                    {
                      "properties": {
                        "cpu": {
                          "description": "Number of logical CPU cores reserved for, and assigned to the model conversion job.",
                          "oneOf": [
                            {
                              "minimum": 1,
                              "type": "integer"
                            },
                            {
                              "pattern": "^\\d+m$",
                              "type": "string"
                            },
                            { "type": "null" }
                          ]
                        },
                        "gpu": {
                          "description": "Number of GPUs reserved for, and assigned to the model conversion job.",
                          "oneOf": [
                            {
                              "minimum": 0,
                              "type": "integer"
                            },
                            { "type": "null" }
                          ]
                        },
                        "memory": {
                          "description": "Amount of CPU-visible system memory allocated to, and reserved for the model conversion job.",
                          "oneOf": [
                            {
                              "pattern": "^\\d+[GKMgkm]i$",
                              "type": "string"
                            },
                            { "type": "null" }
                          ]
                        }
                      },
                      "type": "object"
                    },
                    { "type": "null" }
                  ]
                },
                "dataType": {
                  "description": "Data type used when compiling and optimizing the model for TensorRT.",
                  "oneOf": [
                    {
                      "pattern": "(bfloat16|float16|float32)",
                      "type": "string"
                    },
                    { "type": "null" }
                  ]
                },
                "enable": {
                  "description": "When `true`, enables conversion of models into TensorRT format before loading them into Triton Server.",
                  "oneOf": [
                    { "type": "boolean" },
                    { "type": "null" }
                  ]
                },
                "parallelism": {
                  "description": "Parallelism configuration options which affect how the model is converted to TensorRT-LLM format, specifically if/how the model is partitioned for deployment to multiple GPUs.",
                  "oneOf": [
                    {
                      "properties": {
                        "pipeline": {
                          "oneOf": [
                            {
                              "minimum": 1,
                              "type": "integer"
                            },
                            { "type": "null" }
                          ]
                        },
                        "tensor": {
                          "oneOf": [
                            {
                              "minimum": 1,
                              "type": "integer"
                            },
                            { "type": "null" }
                          ]
                        }
                      },
                      "type": "object"
                    },
                    { "type": "null" }
                  ]
                }
              },
              "type": "object"
            },
            { "type": "null" }
          ]
        }
      },
      "required": [
        "name",
        "persistentVolumeClaim"
      ],
      "type": "object"
    },
    "triton": {
      "description": "Configuration options for Triton Server.",
      "properties": {
        "image": {
          "description": "Configuration options related to the container image for Triton Server.",
          "properties": {
            "pullSecrets": {
              "description": "Optional list of pull secrets to be used when downloading the Triton Server container image.",
              "oneOf": [
                {
                  "items": [
                    { "type": "object" }
                  ],
                  "type": "array"
                },
                { "type": "null" }
              ]
            },
            "name": {
              "description": "Name of the container image containing the version of Triton Server to be used.",
              "type": "string"
            }
          },
          "required": [ "name" ],
          "type": "object"
        },
        "resources": {
          "description": "Configuration options managing the resources assigned to individual Triton Server instances. ",
          "oneOf": [
            {
              "properties": {
                "cpu": {
                  "description": "Number of logical CPU cores reserved for, and assigned to each instance of Triton Server.",
                  "oneOf": [
                    {
                      "minimum": 1,
                      "type": "integer"
                    },
                    {
                      "pattern": "^\\d+m$",
                      "type": "string"
                    },
                    { "type": "null" }
                  ]
                },
                "memory": {
                  "description": "Amount of CPU-visible system memory allocated to, and reserved for each instance of Triton Server.",
                  "oneOf": [
                    {
                      "pattern": "^\\d+[GKMgkm]i$",
                      "type": "string"
                    },
                    { "type": "null" }
                  ]
                }
              },
              "type": "object"
            },
            { "type": "null" }
          ]
        }
      },
      "required": [ "image" ],
      "type": "object"
    },
    "logging": {
      "description": "Configuration options related to how various components generate logs.",
      "oneOf": [
        {
          "properties": {
            "initialization": {
              "description": "Logging configuration options specific to the initialization container.",
              "oneOf": [
                {
                  "properties": {
                    "verbose": {
                      "description": "When `true` the model download and generation of TRT engine and plan use verbose logging; otherwise standard logging is used.",
                      "oneOf": [
                        { "type": "boolean" },
                        { "type": "null" }
                      ]
                    }
                  },
                  "type": "object"
                },
                { "type": "null" }
              ]
            },
            "tritonServer": {
              "description": "Logging configuration options specific to Triton Server.",
              "oneOf": [
                {
                  "properties": {
                    "useIso8601": {
                      "description": "When `true` Triton Server logs are formatted using the ISO8601 standard; otherwise Triton's default format will be used. ",
                      "oneOf": [
                        { "type": "boolean" },
                        { "type": "null" }
                      ]
                    },
                    "verbose": {
                      "description": "When `true` Triton Server uses verbose logging; otherwise standard logging is used.",
                      "oneOf": [
                        { "type": "boolean" },
                        { "type": "null" }
                      ]
                    }
                  },
                  "type": "object"
                },
                { "type": "null" }
              ]
            }
          },
          "type": "object"
        },
        { "type": "null" }
      ]
    },
    "kubernetes": {
      "description": "Configurations option related to the Kubernetes objects created by the chart.",
      "oneOf": [
        {
          "properties": {
            "hostRootPath": {
              "description": "Root file-system path used when mounting content to the underlying host.",
              "oneOf": [
                { "type": "string" },
                { "type": "null" }
              ]
            },
            "labels": {
              "description": "Optional set of labels to be applied to created Kubernetes objects.",
              "oneOf": [
                { "type": "object" },
                { "type": "null" }
              ]
            },
            "noService": {
              "description": "When `false`, a service will not be created when the chart is installed; otherwise a service will be created.",
              "oneOf": [
                { "type": "boolean" },
                { "type": "null" }
              ]
            },
            "tolerations": {
              "description": "Tolerations applied to every pod deployed as part of this deployment.",
              "oneOf": [
                {
                  "items": [
                    {
                      "description": "Toleration applied to every pod deployed as part of this deployment.",
                      "type": "object"
                    },
                    { "type": "null" }
                  ],
                  "type": "array"
                },
                { "type": "null" }
              ]
            }
          },
          "type": "object"
        },
        { "type": "null" }
      ]
    }
  },
  "required": [
    "gpu",
    "model",
    "triton"
  ]
}
